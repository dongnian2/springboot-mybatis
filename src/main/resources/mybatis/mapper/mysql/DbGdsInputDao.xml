<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.mapper.mysql.goods.DbGdsInputDao">
    
	<sql id="dbGdsInputColumns">
		a.id AS "id",
		a.storage_code AS "storageCode",
		a.wh_id AS "warehouse.id",
		a.type as "type",
		a.storage_date AS "storageDate",
		a.cust_id AS "custId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.status as "status",
		wh.wh_name as "warehouse.whName"
	</sql>
	
	<sql id="dbGdsInputJoins">
		left join db_warehouse wh on wh.id =a.wh_id
	</sql>
	
    
	<select id="get" resultType="com.springboot.entity.goods.DbGdsInput" >
		SELECT 
			<include refid="dbGdsInputColumns"/>
		FROM db_gds_input a
		<include refid="dbGdsInputJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.springboot.entity.goods.DbGdsInput" >
		SELECT 
			<include refid="dbGdsInputColumns"/>
			,
			(select count(1) from db_gds_indetail b where a.id =b.gds_inid ) as countNum
		FROM db_gds_input a
		<include refid="dbGdsInputJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="type !=null ">
				and a.type =#{type}
			</if>
			<if test="status !=null  ">
			 and  a.status =#{status}
			</if>
			<if test="warehouse !=null and warehouse.id !=null and warehouse.id !='' ">
			and a.wh_id = #{warehouse.id}
			</if>
			<if test="createDate !=null and createDate  != '' ">
			and DATE_FORMAT(a.create_date,'%Y-%m-%d') =DATE_FORMAT(#{createDate},'%Y-%m-%d') 
			</if>
			<if test="storageCode !=null and storageCode !='' ">
			and a.storage_code =#{storageCode}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.springboot.entity.goods.DbGdsInput" >
		SELECT 
			<include refid="dbGdsInputColumns"/>
		FROM db_gds_input a
		<include refid="dbGdsInputJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="status !=null and status !='' ">
			 and  a.status =#{status}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO db_gds_input(
			id,
			storage_code,
			wh_id,
			type,
			storage_date,
			cust_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,status
		) VALUES (
			#{id},
			#{storageCode},
			#{warehouse.id},
			#{type},
			#{storageDate},
			#{custId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{status}
		)
	</insert>
	
	<update id="update">
		UPDATE db_gds_input SET 	
			storage_code = #{storageCode},
			type =#{type},
			wh_id = #{warehouse.id},
			storage_date = #{storageDate},
			cust_id = #{custId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			 status =#{status}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM db_gds_input
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE db_gds_input SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="checkStatus">
		UPDATE db_gds_input SET 
			status =1
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="com.springboot.entity.goods.DbGdsInput" statementType="STATEMENT">
		select * FROM db_gds_input  where ${propertyName} = '${value}'
	</select>
	
</mapper>