<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.mapper.mysql.goods.DbGdsBatchDao">
    
	<sql id="dbGdsBatchColumns">
		a.id AS "id",
		a.gds_id AS "gdsId",
		g.gds_name as "gdsName",
		a.gds_batch AS "gdsBatch",
		a.gds_price AS "gdsPrice",
		a.gds_supplier AS "gdsSupplier",
		a.gds_place AS "gdsPlace",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate"
	</sql>
	
	<sql id="dbGdsBatchJoins">
		left join db_goods g on g.id =a.gds_id
	</sql>
	
    
	<select id="get" resultType="com.springboot.entity.goods.DbGdsBatch" >
		SELECT 
			<include refid="dbGdsBatchColumns"/>
		FROM db_gds_batch a
		<include refid="dbGdsBatchJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.springboot.entity.goods.DbGdsBatch" >
		SELECT 
			<include refid="dbGdsBatchColumns"/>
		FROM db_gds_batch a
		<include refid="dbGdsBatchJoins"/>
		<where>
			<if test="gdsId !=null and gdsId !='' ">
			 	and a.gds_id =#{gdsId}
			</if>
			<if test="gdsBatch != null and gdsBatch != ''">
				AND a.gds_batch = #{gdsBatch}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.springboot.entity.goods.DbGdsBatch" >
		SELECT 
			<include refid="dbGdsBatchColumns"/>
		FROM db_gds_batch a
		<include refid="dbGdsBatchJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO db_gds_batch(
			id,
			gds_id,
			gds_batch,
			gds_price,
			gds_supplier,
			gds_place,
			create_by,
			create_date,
			update_by,
			update_date
		) VALUES (
			#{id},
			#{gdsId},
			#{gdsBatch},
			#{gdsPrice},
			#{gdsSupplier},
			#{gdsPlace},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE db_gds_batch SET 	
			gds_id = #{gdsId},
			gds_batch = #{gdsBatch},
			gds_price = #{gdsPrice},
			gds_supplier = #{gdsSupplier},
			gds_place = #{gdsPlace},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM db_gds_batch
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE db_gds_batch SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="com.springboot.entity.goods.DbGdsBatch" statementType="STATEMENT">
		select * FROM db_gds_batch  where ${propertyName} = '${value}'
	</select>
	
</mapper>